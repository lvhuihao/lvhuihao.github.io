{"remainingRequest":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue?vue&type=template&id=68c94b02&ts=true","dependencies":[{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue","mtime":1669480448446},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJnYW1lQm9hcmQiPgogICAgICAgIDxkaXYgY2xhc3M9InJvdyIgdi1mb3I9Iihyb3csIHJvd0luZGV4KSBpbiBjb250YWluZXJTaXplLmhlaWdodCIgOmtleT0icm93SW5kZXgiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xsb20iIHYtZm9yPSIoY29sbG9tLCBjb2xsb21JbmRleCkgaW4gY29udGFpbmVyU2l6ZS53aWR0aCIgOmtleT0iY29sbG9tSW5kZXgiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGl4ZWwiIHYtaWY9ImlzUGl4ZWwocm93SW5kZXgsIGNvbGxvbUluZGV4KSI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClgBACvF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"gameBoard\">\n        <div class=\"row\" v-for=\"(row, rowIndex) in containerSize.height\" :key=\"rowIndex\">\n            <div class=\"collom\" v-for=\"(collom, collomIndex) in containerSize.width\" :key=\"collomIndex\">\n                <div class=\"pixel\" v-if=\"isPixel(rowIndex, collomIndex)\"></div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup lang=\"ts\">\nimport { reactive, computed, onMounted } from 'vue';\nimport { BoxInstence } from '../assets/box.ts'\nlet pixels = [];\nlet containerRealSize = reactive({ width: 200, height: 400 });\nlet pixelRealSize = reactive({ width: 20, height: 20 });\nlet containerSize = computed(() => {\n    return { width: containerRealSize.width / pixelRealSize.width, height: containerRealSize.height / pixelRealSize.height }\n})\n\nlet curBox = computed(() => {\n    if (activeBox) {\n        return activeBox.body.map(cor => {\n            return [cor[0] + boxCenter[0], cor[1] + boxCenter[1]]\n        })\n    } else {\n        return [boxCenter]\n    }\n})\n\nlet boxCenter = reactive([Math.floor(containerSize.value.width / 2), -1])\nlet activeBox;\n\nonMounted(() => {\n    init();\n})\nfunction isPixel(row, collom) {\n    return pixels[row][collom]\n}\nfunction init() {\n    pixels = new Array(containerSize.value.width).fill(new Array(containerSize.value.height).fill(false));\n    activeBox = new BoxInstence();\n    setInterval(() => {\n        boxCenter[1]++;\n        console.log(curBox);\n    }, 1000)\n}\n</script>\n<style>\n.gameBoard {\n    width: 50%;\n    height: 50%;\n}\n\n.row {\n    width: auto;\n    height: 20px;\n}\n\n.collom {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n}\n\n.pixel {\n    width: 100%;\n    height: 100%;\n    border: solid black 1px;\n}\n</style>\n"]}]}