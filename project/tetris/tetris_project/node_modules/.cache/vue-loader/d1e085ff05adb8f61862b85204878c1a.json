{"remainingRequest":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue?vue&type=style&index=0&id=68c94b02&lang=css","dependencies":[{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue","mtime":1669480448446},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5nYW1lQm9hcmQgewogICAgd2lkdGg6IDUwJTsKICAgIGhlaWdodDogNTAlOwp9Cgoucm93IHsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiAyMHB4Owp9CgouY29sbG9tIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHdpZHRoOiAyMHB4OwogICAgaGVpZ2h0OiAyMHB4Owp9CgoucGl4ZWwgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBib3JkZXI6IHNvbGlkIGJsYWNrIDFweDsKfQo="},{"version":3,"sources":["/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue"],"names":[],"mappings":";AAgDA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACf;;AAEA,CAAC,CAAC,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B","file":"/Users/lvhuihao/Github/lvhuihao.github.io/project/tetris/tetris_project/src/components/game.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"gameBoard\">\n        <div class=\"row\" v-for=\"(row, rowIndex) in containerSize.height\" :key=\"rowIndex\">\n            <div class=\"collom\" v-for=\"(collom, collomIndex) in containerSize.width\" :key=\"collomIndex\">\n                <div class=\"pixel\" v-if=\"isPixel(rowIndex, collomIndex)\"></div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup lang=\"ts\">\nimport { reactive, computed, onMounted } from 'vue';\nimport { BoxInstence } from '../assets/box.ts'\nlet pixels = [];\nlet containerRealSize = reactive({ width: 200, height: 400 });\nlet pixelRealSize = reactive({ width: 20, height: 20 });\nlet containerSize = computed(() => {\n    return { width: containerRealSize.width / pixelRealSize.width, height: containerRealSize.height / pixelRealSize.height }\n})\n\nlet curBox = computed(() => {\n    if (activeBox) {\n        return activeBox.body.map(cor => {\n            return [cor[0] + boxCenter[0], cor[1] + boxCenter[1]]\n        })\n    } else {\n        return [boxCenter]\n    }\n})\n\nlet boxCenter = reactive([Math.floor(containerSize.value.width / 2), -1])\nlet activeBox;\n\nonMounted(() => {\n    init();\n})\nfunction isPixel(row, collom) {\n    return pixels[row][collom]\n}\nfunction init() {\n    pixels = new Array(containerSize.value.width).fill(new Array(containerSize.value.height).fill(false));\n    activeBox = new BoxInstence();\n    setInterval(() => {\n        boxCenter[1]++;\n        console.log(curBox);\n    }, 1000)\n}\n</script>\n<style>\n.gameBoard {\n    width: 50%;\n    height: 50%;\n}\n\n.row {\n    width: auto;\n    height: 20px;\n}\n\n.collom {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n}\n\n.pixel {\n    width: 100%;\n    height: 100%;\n    border: solid black 1px;\n}\n</style>\n"]}]}